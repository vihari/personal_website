var ps_include = function(path){
    var lastScript = document.getElementsByTagName("head")[0].lastChild;
    var fullUrl = lastScript.src.substring(0, lastScript.src.lastIndexOf('/') + 1) + path;
    document.write('<' + 'script');
    document.write(' language="javascript"');
    document.write(' type="text/javascript"');
    document.write(' src="' + fullUrl + '">');
    document.write('</' + 'script' + '>');
}
    
ps_include('./parsers/pcd.js');
var PointStream=(function(){function PointStream(){var undef;var __empty_func=function(){};if(!Float32Array.prototype.subarray){Float32Array.prototype.subarray=function(s,e){return!e?this.slice(0):this.slice(s,e);};}
						   var userMouseReleased=__empty_func;var userMousePressed=__empty_func;var userMouseScroll=__empty_func;var mouseX=0;var mouseY=0;var userKeyUp=__empty_func;var userKeyDown=__empty_func;var userKeyPressed=__empty_func;var key=0;var usersRender=__empty_func;var parsers=[];var pointClouds=[];var registeredParsers={};registeredParsers["pcd"]=PCDParser;registeredParsers["asc"]=ASCParser;registeredParsers["psi"]=PSIParser;registeredParsers["pts"]=PTSParser;registeredParsers["ply"]=PLYParser;const VERSION="0.8";var FILE_NOT_FOUND=-1;var STARTED=1;var STREAMING=2;var COMPLETE=3;var frames=0;var frameRate=0;var frameCount=0;var lastTime;var bk=[1,1,1,1];var attn=[0.01,0.0,0.003];var logBuffer=[];var browser=-1;var MINEFIELD=0;var CHROME=1;var CHROMIUM=2;var WEBKIT=3;var FIREFOX=4;var OPERA=5;var SAFARI=6;var IE=7;var canvas=null;var ctx=null;var matrixStack=[];var projectionMatrix;var normalMatrix;var currProgram;var defaultProgram;var programCaches=[];var _BACKSPACE=8;var _TAB=9;var _ENTER=10;var _RETURN=13;var _ESC=27;var _DELETE=127;var _CODED=0xffff;var _SHIFT=16;var _CONTROL=17;var _ALT=18;var _UP=38;var _RIGHT=39;var _DOWN=40;var _LEFT=37;var codedKeys=[_SHIFT,_CONTROL,_ALT,_UP,_RIGHT,_DOWN,_LEFT];var vertexShaderSource="varying vec4 frontColor;"+"attribute vec3 ps_Vertex;"+"attribute vec4 ps_Color;"+"uniform float ps_PointSize;"+"uniform vec3 ps_Attenuation;"+"uniform mat4 ps_ModelViewMatrix;"+"uniform mat4 ps_ProjectionMatrix;"+"void main(void) {"+"  frontColor = ps_Color;"+"  vec4 ecPos4 = ps_ModelViewMatrix * vec4(ps_Vertex, 1.0);"+"  float dist = length(ecPos4);"+"  float attn = ps_Attenuation[0] + "+"              (ps_Attenuation[1] * dist) + "+"              (ps_Attenuation[2] * dist * dist);"+"  gl_PointSize = (attn > 0.0) ? ps_PointSize * sqrt(1.0/attn) : 1.0;"+"  gl_Position = ps_ProjectionMatrix * ecPos4;"+"}";var fragmentShaderSource="#ifdef GL_ES                 \n"+"  precision highp float;     \n"+"#endif                       \n"+"varying vec4 frontColor;      "+"void main(void){              "+"  gl_FragColor = frontColor;  "+"}";console=window.console||tinylogLite;function uniformi(programObj,varName,varValue){var varLocation=ctx.getUniformLocation(programObj,varName);if(varLocation!==null){if(varValue.length===4){ctx.uniform4iv(varLocation,varValue);}else if(varValue.length===3){ctx.uniform3iv(varLocation,varValue);}else if(varValue.length===2){ctx.uniform2iv(varLocation,varValue);}else{ctx.uniform1i(varLocation,varValue);}}else{console.log("uniform var '"+varName+"' was not found.");}}
function uniformf(programObj,varName,varValue){var varLocation=ctx.getUniformLocation(programObj,varName);if(varLocation!==null){if(varValue.length===4){ctx.uniform4fv(varLocation,varValue);}else if(varValue.length===3){ctx.uniform3fv(varLocation,varValue);}else if(varValue.length===2){ctx.uniform2fv(varLocation,varValue);}else{ctx.uniform1f(varLocation,varValue);}}
else{console.log("Uniform var '"+varName+"' was not found.");}}
function uniformMatrix(programObj,varName,transpose,matrix){var varLocation=ctx.getUniformLocation(programObj,varName);if(varLocation!==null){if(matrix.length===16){ctx.uniformMatrix4fv(varLocation,transpose,matrix);}else if(matrix.length===9){ctx.uniformMatrix3fv(varLocation,transpose,matrix);}else{ctx.uniformMatrix2fv(varLocation,transpose,matrix);}}
else{console.log("Uniform matrix '"+varName+"' was not found.");}}
function vertexAttribPointer(programObj,varName,size,VBO){var varLocation=ctx.getAttribLocation(programObj,varName);if(varLocation!==-1){ctx.bindBuffer(ctx.ARRAY_BUFFER,VBO);ctx.vertexAttribPointer(varLocation,size,ctx.FLOAT,false,0,0);ctx.enableVertexAttribArray(varLocation);}
else{console.log("Vertex attrib '"+varName+"' was not found.");}}
function getParserIndex(parser){var i;for(i=0;i<parsers.length;i++){if(parsers[i]===parser){break;}}
return i;}
function createBufferObject(arr){if(ctx){var VBO=ctx.createBuffer();ctx.bindBuffer(ctx.ARRAY_BUFFER,VBO);ctx.bufferData(ctx.ARRAY_BUFFER,arr,ctx.STATIC_DRAW);var obj={length:arr.length,VBO:VBO,array:arr};return obj;}}
function disableVertexAttribPointer(programObj,varName){var varLocation=ctx.getAttribLocation(programObj,varName);if(varLocation!==-1){ctx.disableVertexAttribArray(varLocation);}}
function getUserAgent(userAgentString){if(userAgentString.match(/Chrome/)){return CHROME;}
if(userAgentString.match(/AppleWebKit/)){return WEBKIT;}
if(userAgentString.match(/Minefield/)){return MINEFIELD;}}
function createProgramObject(ctx,vetexShaderSource,fragmentShaderSource){var vertexShaderObject=ctx.createShader(ctx.VERTEX_SHADER);ctx.shaderSource(vertexShaderObject,vetexShaderSource);ctx.compileShader(vertexShaderObject);if(!ctx.getShaderParameter(vertexShaderObject,ctx.COMPILE_STATUS)){throw ctx.getShaderInfoLog(vertexShaderObject);}
var fragmentShaderObject=ctx.createShader(ctx.FRAGMENT_SHADER);ctx.shaderSource(fragmentShaderObject,fragmentShaderSource);ctx.compileShader(fragmentShaderObject);if(!ctx.getShaderParameter(fragmentShaderObject,ctx.COMPILE_STATUS)){throw ctx.getShaderInfoLog(fragmentShaderObject);}
var programObject=ctx.createProgram();ctx.attachShader(programObject,vertexShaderObject);ctx.attachShader(programObject,fragmentShaderObject);ctx.linkProgram(programObject);if(!ctx.getProgramParameter(programObject,ctx.LINK_STATUS)){throw"Error linking shaders.";}
return programObject;}
function keyCodeMap(code,shift){if(code>=65&&code<=90){if(shift){return code;}
else{return code+32;}}
else if(code>=48&&code<=57){if(shift){switch(code){case 49:return 33;case 50:return 64;case 51:return 35;case 52:return 36;case 53:return 37;case 54:return 94;case 55:return 38;case 56:return 42;case 57:return 40;case 48:return 41;default:return 0;}}}
else{if(shift){switch(code){case 107:return 43;case 219:return 123;case 221:return 125;case 222:return 34;default:return 0;}}else{switch(code){case 188:return 44;case 109:return 45;case 190:return 46;case 191:return 47;case 192:return 96;case 219:return 91;case 220:return 92;case 221:return 93;case 222:return 39;default:return 0;}}}
return code;}
function keyFunc(evt,type){var key;if(evt.charCode){key=keyCodeMap(evt.charCode,evt.shiftKey);}else{key=keyCodeMap(evt.keyCode,evt.shiftKey);}
return key;}
var tinylogLite=(function(){"use strict";var tinylogLite={},undef="undefined",func="function",False=!1,True=!0,logLimit=512,log="log";if(typeof tinylog!==undef&&typeof tinylog[log]===func){tinylogLite[log]=tinylog[log];}else if(typeof document!==undef&&!document.fake){(function(){var doc=document,$div="div",$style="style",$title="title",containerStyles={zIndex:10000,position:"fixed",bottom:"0px",width:"100%",height:"15%",fontFamily:"sans-serif",color:"#ccc",backgroundColor:"black"},outputStyles={position:"relative",fontFamily:"monospace",overflow:"auto",height:"100%",paddingTop:"5px"},resizerStyles={height:"5px",marginTop:"-5px",cursor:"n-resize",backgroundColor:"darkgrey"},closeButtonStyles={position:"absolute",top:"5px",right:"20px",color:"#111",MozBorderRadius:"4px",webkitBorderRadius:"4px",borderRadius:"4px",cursor:"pointer",fontWeight:"normal",textAlign:"center",padding:"3px 5px",backgroundColor:"#333",fontSize:"12px"},entryStyles={minHeight:"16px"},entryTextStyles={fontSize:"12px",margin:"0 8px 0 8px",maxWidth:"100%",whiteSpace:"pre-wrap",overflow:"auto"},view=doc.defaultView,docElem=doc.documentElement,docElemStyle=docElem[$style],setStyles=function(){var i=arguments.length,elemStyle,styles,style;while(i--){styles=arguments[i--];elemStyle=arguments[i][$style];for(style in styles){if(styles.hasOwnProperty(style)){elemStyle[style]=styles[style];}}}},observer=function(obj,event,handler){if(obj.addEventListener){obj.addEventListener(event,handler,False);}else if(obj.attachEvent){obj.attachEvent("on"+event,handler);}
return[obj,event,handler];},unobserve=function(obj,event,handler){if(obj.removeEventListener){obj.removeEventListener(event,handler,False);}else if(obj.detachEvent){obj.detachEvent("on"+event,handler);}},clearChildren=function(node){var children=node.childNodes,child=children.length;while(child--){node.removeChild(children.item(0));}},append=function(to,elem){return to.appendChild(elem);},createElement=function(localName){return doc.createElement(localName);},createTextNode=function(text){return doc.createTextNode(text);},createLog=tinylogLite[log]=function(message){var uninit,originalPadding=docElemStyle.paddingBottom,container=createElement($div),containerStyle=container[$style],resizer=append(container,createElement($div)),output=append(container,createElement($div)),closeButton=append(container,createElement($div)),resizingLog=False,previousHeight=False,previousScrollTop=False,messages=0,updateSafetyMargin=function(){docElemStyle.paddingBottom=container.clientHeight+"px";},setContainerHeight=function(height){var viewHeight=view.innerHeight,resizerHeight=resizer.clientHeight;if(height<0){height=0;}else if(height+resizerHeight>viewHeight){height=viewHeight-resizerHeight;}
containerStyle.height=height/viewHeight*100+"%";updateSafetyMargin();},observers=[observer(doc,"mousemove",function(evt){if(resizingLog){setContainerHeight(view.innerHeight-evt.clientY);output.scrollTop=previousScrollTop;}}),observer(doc,"mouseup",function(){if(resizingLog){resizingLog=previousScrollTop=False;}}),observer(resizer,"dblclick",function(evt){evt.preventDefault();if(previousHeight){setContainerHeight(previousHeight);previousHeight=False;}else{previousHeight=container.clientHeight;containerStyle.height="0px";}}),observer(resizer,"mousedown",function(evt){evt.preventDefault();resizingLog=True;previousScrollTop=output.scrollTop;}),observer(resizer,"contextmenu",function(){resizingLog=False;}),observer(closeButton,"click",function(){uninit();})];uninit=function(){var i=observers.length;while(i--){unobserve.apply(tinylogLite,observers[i]);}
docElem.removeChild(container);docElemStyle.paddingBottom=originalPadding;clearChildren(output);clearChildren(container);tinylogLite[log]=createLog;};setStyles(container,containerStyles,output,outputStyles,resizer,resizerStyles,closeButton,closeButtonStyles);closeButton[$title]="Close Log";append(closeButton,createTextNode("\u2716"));resizer[$title]="Double-click to toggle log minimization";docElem.insertBefore(container,docElem.firstChild);tinylogLite[log]=function(message){if(messages===logLimit){output.removeChild(output.firstChild);}else{messages++;}
var entry=append(output,createElement($div)),entryText=append(entry,createElement($div));entry[$title]=(new Date()).toLocaleTimeString();setStyles(entry,entryStyles,entryText,entryTextStyles);append(entryText,createTextNode(message));output.scrollTop=output.scrollHeight;};tinylogLite[log](message);};}());}else if(typeof print===func){tinylogLite[log]=print;}
return tinylogLite;}());function startCallback(parser){var i=getParserIndex(parser);pointClouds[i].status=STARTED;}
function parseCallback(parser,attributes){var parserIndex=getParserIndex(parser);var pc=pointClouds[parserIndex];pc.status=STREAMING;pc.progress=parser.progress;pc.numPoints=parser.numParsedPoints;var gotVertexData=false;for(var semantic in attributes){if(!pc.attributes[semantic]){pc.attributes[semantic]=[];}
if(semantic==="ps_Color"){pc.usingColor=true;}
var buffObj=createBufferObject(attributes[semantic]);pc.attributes[semantic].push(buffObj);if(gotVertexData===false){gotVertexData=true;var addedVertices=[0,0,0];for(var j=0;j<attributes[semantic].length;j+=3){addedVertices[0]+=attributes[semantic][j];addedVertices[1]+=attributes[semantic][j+1];addedVertices[2]+=attributes[semantic][j+2];}
pc.addedVertices[0]+=addedVertices[0];pc.addedVertices[1]+=addedVertices[1];pc.addedVertices[2]+=addedVertices[2];pc.center[0]=pc.addedVertices[0]/pc.numPoints;pc.center[1]=pc.addedVertices[1]/pc.numPoints;pc.center[2]=pc.addedVertices[2]/pc.numPoints;}}}
function loadedCallback(parser){var parserIndex=getParserIndex(parser);var pc=pointClouds[parserIndex];pc.status=COMPLETE;pc.progress=parser.progress;}
function renderLoop(){frames++;frameCount++;var now=new Date();matrixStack.push(M4x4.I);usersRender();matrixStack.pop();if(now-lastTime>1000){frameRate=frames/(now-lastTime)*1000;frames=0;lastTime=now;}}
function getAverage(arr){var objCenter=[0,0,0];for(var i=0;i<arr.length;i+=3){objCenter[0]+=arr[i];objCenter[1]+=arr[i+1];objCenter[2]+=arr[i+2];}
objCenter[0]/=arr.length/3;objCenter[1]/=arr.length/3;objCenter[2]/=arr.length/3;return objCenter;}
function attach(element,type,func){if(element.addEventListener){element.addEventListener(type,func,false);}else{element.attachEvent("on"+type,fn);}}
function setDefaultUniforms(){uniformf(currProgram,"ps_PointSize",1);uniformf(currProgram,"ps_Attenuation",[attn[0],attn[1],attn[2]]);uniformMatrix(currProgram,"ps_ProjectionMatrix",false,projectionMatrix);}
function mouseScroll(evt){var delta=0;if(evt.detail){delta=evt.detail/3;}
else if(evt.wheelDelta){delta=-evt.wheelDelta/360;}
userMouseScroll(delta);}
function mousePressed(){userMousePressed();}
function mouseReleased(){userMouseReleased();}
function mouseMoved(evt){mouseX=evt.pageX;mouseY=evt.pageY;}
function keyDown(evt){key=keyFunc(evt,userKeyDown);userKeyDown();}
function keyPressed(evt){key=keyFunc(evt,userKeyPressed);userKeyPressed();}
function keyUp(evt){key=keyFunc(evt,userKeyUp);userKeyUp();}
this.__defineSetter__("onMousePressed",function(func){userMousePressed=func;});this.__defineSetter__("onMouseReleased",function(func){userMouseReleased=func;});this.__defineSetter__("onMouseScroll",function(func){userMouseScroll=func;});this.__defineSetter__("onKeyDown",function(func){userKeyDown=func;});this.__defineSetter__("onKeyPressed",function(func){userKeyPressed=func;});this.__defineSetter__("onKeyUp",function(func){userKeyUp=func;});this.__defineSetter__("onRender",function(func){usersRender=func;});this.__defineGetter__("mouseX",function(){return mouseX;});this.__defineGetter__("mouseY",function(){return mouseY;});this.__defineGetter__("key",function(){return key;});this.__defineGetter__("width",function(){return width;});this.__defineGetter__("height",function(){return height;});this.__defineGetter__("version",function(){return VERSION;});this.__defineGetter__("frameRate",function(){return frameRate;});this.__defineGetter__("frameCount",function(){return frameCount;});this.background=function(color){ctx.clearColor(color[0],color[1],color[2],color[3]);};this.clear=function(){ctx.clear(ctx.COLOR_BUFFER_BIT|ctx.DEPTH_BUFFER_BIT);};this.free=function(pointCloud){var semantics=Object.keys(pointCloud.attributes);var firstSemantic=semantics[0];var arrayOfBufferObjsV=pointCloud.attributes[firstSemantic];if(arrayOfBufferObjsV){for(var currVBO=0;currVBO<arrayOfBufferObjsV.length;currVBO++){for(name in semantics){if(pointCloud.attributes[semantics[name]][currVBO]){ctx.deleteBuffer(pointCloud.attributes[semantics[name]][currVBO].VBO);}}}}};this.render=function(pointCloud){if(ctx){if(pointCloud.usingColor){if(ctx.getUniformLocation(currProgram,"ps_UsingColor")!==null){uniformi(currProgram,"ps_UsingColor",true);}}
var topMatrix=this.peekMatrix();normalMatrix=M4x4.inverseOrthonormal(topMatrix);if(ctx.getUniformLocation(currProgram,"ps_NormalMatrix")!==null){uniformMatrix(currProgram,"ps_NormalMatrix",false,M4x4.transpose(normalMatrix));}
uniformMatrix(currProgram,"ps_ModelViewMatrix",false,topMatrix);var semantics=Object.keys(pointCloud.attributes);var firstSemantic=semantics[0];if(pointCloud.attributes[firstSemantic]){var arrayOfBufferObjsV=pointCloud.attributes[firstSemantic];for(var currVBO=0;currVBO<arrayOfBufferObjsV.length;currVBO++){for(name in semantics){if(pointCloud.attributes[semantics[name]][currVBO]){if(ctx.getAttribLocation(currProgram,semantics[name])!==-1){vertexAttribPointer(currProgram,semantics[name],3,pointCloud.attributes[semantics[name]][currVBO].VBO);}}}
ctx.drawArrays(ctx.POINTS,0,arrayOfBufferObjsV[currVBO].length/3);for(var name in semantics){disableVertexAttribPointer(currProgram,semantics[name]);}}}}};this.resize=function(pWidth,pHeight,ctxAttribs){canvas.setAttribute("width",pWidth);canvas.setAttribute("height",pHeight);canvas.style.width=width=pWidth;canvas.style.height=height=pHeight;var contextNames=["webgl","experimental-webgl","moz-webgl","webkit-3d"];for(var i=0;i<contextNames.length;i++){try{ctx=canvas.getContext(contextNames[i],ctxAttribs);if(ctx){break;}}catch(e){}}
if(!ctx){this.println("Your browser does not support WebGL.");}
ctx.viewport(0,0,parseInt(pWidth,10),parseInt(pHeight,10));this.perspective();normalMatrix=M4x4.I;};this.getPNG=function(){var arr=this.readPixels();var cvs=document.createElement('canvas');cvs.width=width;cvs.height=height;var ctx2d=cvs.getContext('2d');var image=ctx2d.createImageData(cvs.width,cvs.height);for(var y=0;y<cvs.height;y++){for(var x=0;x<cvs.width;x++){var index=(y*cvs.width+x)*4;var index2=((cvs.height-1-y)*cvs.width+x)*4;for(var p=0;p<4;p++){image.data[index2+p]=arr[index+p];}}}
ctx2d.putImageData(image,0,0);return cvs.toDataURL();};this.readPixels=function(){var arr=new Uint8Array(width*height*4);ctx.readPixels(0,0,width,height,ctx.RGBA,ctx.UNSIGNED_BYTE,arr);return arr;};this.ortho=function(left,right,bottom,top,near,far){if(arguments.length===0){left=0;right=width;bottom=0;top=height;near=-10000;far=10000;}
var l=left-width/2;var r=right-width/2;var t=top-height/2;var b=bottom-height/2;var x=2/(r-l);var y=2/(t-b);var z=-2/(far-near);var tx=(-(r+l))/(r-l);var ty=(-(t+b))/(t-b);var tz=(-(far+near))/(far-near);projectionMatrix=M4x4.$(x,0,0,tx,0,y,0,ty,0,0,z,tz,0,0,0,1);if(currProgram){uniformMatrix(currProgram,"ps_ProjectionMatrix",false,projectionMatrix);}};this.perspective=function(fovy,aspect,near,far){if(arguments.length===0){fovy=60;aspect=width/height;near=0.1;far=1000;}
var ymax=near*Math.tan(fovy*Math.PI/360);var ymin=-ymax;var xmin=ymin*aspect;var xmax=ymax*aspect;var X=2*near/(xmax-xmin);var Y=2*near/(ymax-ymin);var A=(xmax+xmin)/(xmax-xmin);var B=(ymax+ymin)/(ymax-ymin);var C=-(far+near)/(far-near);var D=-2*far*near/(far-near);projectionMatrix=M4x4.$(X,0,0,0,0,Y,0,0,A,B,C,-1,0,0,D,0);if(currProgram){uniformMatrix(currProgram,"ps_ProjectionMatrix",false,projectionMatrix);}};this.scale=function(sx,sy,sz){var smat=(!sy&&!sz)?M4x4.scale1(sx,M4x4.I):M4x4.scale3(sx,sy,sz,M4x4.I);this.loadMatrix(M4x4.mul(this.peekMatrix(),smat));};this.translate=function(tx,ty,tz){var trans=M4x4.translate3(tx,ty,tz,M4x4.I);this.loadMatrix(M4x4.mul(this.peekMatrix(),trans));};this.rotateX=function(radians){var rotMat=M4x4.rotate(radians,V3.$(1,0,0),M4x4.I);this.loadMatrix(M4x4.mul(this.peekMatrix(),rotMat));};this.rotateY=function(radians){var rotMat=M4x4.rotate(radians,V3.$(0,1,0),M4x4.I);this.loadMatrix(M4x4.mul(this.peekMatrix(),rotMat));};this.rotateZ=function(radians){var rotMat=M4x4.rotate(radians,V3.$(0,0,1),M4x4.I);this.loadMatrix(M4x4.mul(this.peekMatrix(),rotMat));};this.rotate=function(radians,a){var rotMat=M4x4.rotate(radians,a,M4x4.I);this.loadMatrix(M4x4.mul(this.peekMatrix(),rotMat));};this.pushMatrix=function(){matrixStack.push(this.peekMatrix());};this.popMatrix=function(){matrixStack.pop();};this.peekMatrix=function(){return M4x4.clone(matrixStack[matrixStack.length-1]);};this.loadMatrix=function(mat){matrixStack[matrixStack.length-1]=mat;};this.multMatrix=function(mat){this.loadMatrix(M4x4.mul(this.peekMatrix(),mat));};this.getShaderStr=function(path){var XHR=new XMLHttpRequest();XHR.open("GET",path,false);if(XHR.overrideMimeType){XHR.overrideMimeType("text/plain");}
try{XHR.send(null);}catch(e){console.log('XHR error');}
return XHR.responseText;};this.createProgram=function(vertShader,fragShader){return createProgramObject(ctx,vertShader,fragShader);};this.getContext=function(){return ctx;};this.useProgram=function(program){currProgram=program?program:defaultProgram;ctx.useProgram(currProgram);var alreadySet=false;for(var i=0;i<programCaches.length;i++){if(currProgram&&programCaches[i]===currProgram){alreadySet=true;}}
if(alreadySet===false){setDefaultUniforms();programCaches.push(currProgram);}};this.uniformi=function(varName,varValue){uniformi(currProgram,varName,varValue);};this.uniformf=function(varName,varValue){uniformf(currProgram,varName,varValue);};this.uniformMatrix=function(varName,varValue){uniformMatrix(currProgram,varName,false,varValue);};this.registerParser=function(extension,usersParser){registeredParsers[extension]=usersParser;};this.println=function(message){var bufferLen=logBuffer.length;if(bufferLen){tinylogLite.log(logBuffer.join(""));logBuffer.length=0;}
if(arguments.length===0&&bufferLen===0){tinylogLite.log("");}else if(arguments.length!==0){tinylogLite.log(message);}};this.print=function(message){logBuffer.push(message);};this.setup=function(cvs,ctxAttribs){canvas=cvs;lastTime=new Date();frames=0;var cvsWidth=canvas.getAttribute("width");var cvsHeight=canvas.getAttribute("height");if(cvsWidth===null){cvsWidth=300;}
if(cvsHeight===null){cvsHeight=150;}
this.resize(cvsWidth,cvsHeight,ctxAttribs);ctx.enable(ctx.DEPTH_TEST);this.background(bk);defaultProgram=currProgram=createProgramObject(ctx,vertexShaderSource,fragmentShaderSource);ctx.useProgram(currProgram);setDefaultUniforms();window.PSrequestAnimationFrame=(function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback,cvs){window.setTimeout(callback,1000.0/60.0);};})();(function animationLoop(){renderLoop();PSrequestAnimationFrame(animationLoop,canvas);})();attach(cvs,"mouseup",mouseReleased);attach(cvs,"mousedown",mousePressed);attach(cvs,"DOMMouseScroll",mouseScroll);attach(cvs,"mousewheel",mouseScroll);attach(cvs,"mousemove",mouseMoved);attach(document,"keydown",keyDown);attach(document,"keypress",keyPressed);attach(document,"keyup",keyUp);};this.attenuation=function(constant,linear,quadratic){uniformf(currProgram,"ps_Attenuation",[constant,linear,quadratic]);};this.pointSize=function(size){uniformf(currProgram,"ps_PointSize",size);};this.stop=function(path){for(var i=0;i<parsers.length;i++){if(parsers[i].cloudName===path){parsers[i].stop();}}};this.load=function(path){var extension=path.split(".").pop().toLowerCase();if(registeredParsers[extension]){var parserObject=registeredParsers[extension];var parser=new parserObject({start:startCallback,parse:parseCallback,end:loadedCallback});parser.cloudName=path;var newPointCloud={VBOs:[],attributes:{},usingColor:false,progress:0,getProgress:function(){return this.progress;},status:-1,getStatus:function(){return this.status;},addedVertices:[0,0,0],center:[0,0,0],getCenter:function(){return this.center;},numTotalPoints:-1,getNumTotalPoints:function(){return this.numTotalPoints;},numPoints:-1,getNumPoints:function(){return this.numPoints;}};parsers.push(parser);pointClouds.push(newPointCloud);parser.load(path);return newPointCloud;}
throw"There is no parser for the file type: "+extension;};}
return PointStream;}());var MJS_VERSION=0x000000;var MJS_EPSILON=0.00001;var MJS_DO_ASSERT=true;var MJS_FLOAT_ARRAY_TYPE=Float32Array;var V3={};V3._temp1=new MJS_FLOAT_ARRAY_TYPE(3);V3._temp2=new MJS_FLOAT_ARRAY_TYPE(3);V3._temp3=new MJS_FLOAT_ARRAY_TYPE(3);if(MJS_FLOAT_ARRAY_TYPE===Array){V3.x=[1.0,0.0,0.0];V3.y=[0.0,1.0,0.0];V3.z=[0.0,0.0,1.0];V3.$=function V3_$(x,y,z){return[x,y,z];};V3.clone=function V3_clone(a){return[a[0],a[1],a[2]];};}else{V3.x=new MJS_FLOAT_ARRAY_TYPE([1.0,0.0,0.0]);V3.y=new MJS_FLOAT_ARRAY_TYPE([0.0,1.0,0.0]);V3.z=new MJS_FLOAT_ARRAY_TYPE([0.0,0.0,1.0]);V3.$=function V3_$(x,y,z){return new MJS_FLOAT_ARRAY_TYPE([x,y,z]);};V3.clone=function V3_clone(a){return new MJS_FLOAT_ARRAY_TYPE(a);};}
V3.u=V3.x;V3.v=V3.y;V3.add=function V3_add(a,b,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
r[0]=a[0]+b[0];r[1]=a[1]+b[1];r[2]=a[2]+b[2];return r;};V3.equals=function V3_equals(a,b){if(Math.abs(a[0]-b[0])<MJS_EPSILON&&Math.abs(a[1]-b[1])<MJS_EPSILON&&Math.abs(a[2]-b[2])<MJS_EPSILON)
{return true;}
return false;};V3.sub=function V3_sub(a,b,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
r[0]=a[0]-b[0];r[1]=a[1]-b[1];r[2]=a[2]-b[2];return r;};V3.neg=function V3_neg(a,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
r[0]=-a[0];r[1]=-a[1];r[2]=-a[2];return r;};V3.direction=function V3_direction(a,b,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
return V3.normalize(V3.sub(a,b,r),r);};V3.length=function V3_length(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);};V3.lengthSquared=function V3_lengthSquared(a){return a[0]*a[0]+a[1]*a[1]+a[2]*a[2];};V3.normalize=function V3_normalize(a,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
var im=1.0/V3.length(a);r[0]=a[0]*im;r[1]=a[1]*im;r[2]=a[2]*im;return r;};V3.scale=function V3_scale(a,k,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
r[0]=a[0]*k;r[1]=a[1]*k;r[2]=a[2]*k;return r;};V3.dot=function V3_dot(a,b){return a[0]*b[0]+
a[1]*b[1]+
a[2]*b[2];};V3.cross=function V3_cross(a,b,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
r[0]=a[1]*b[2]-a[2]*b[1];r[1]=a[2]*b[0]-a[0]*b[2];r[2]=a[0]*b[1]-a[1]*b[0];return r;};V3.angle=function V3_angle(a,b){return Math.acos(V3.dot(a,b));};V3.mul4x4=function V3_mul4x4(m,v,r){var w;var tmp=V3._temp1;if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
tmp[0]=m[3];tmp[1]=m[7];tmp[2]=m[11];w=V3.dot(v,tmp)+m[15];tmp[0]=m[0];tmp[1]=m[4];tmp[2]=m[8];r[0]=(V3.dot(v,tmp)+m[12])/w;tmp[0]=m[1];tmp[1]=m[5];tmp[2]=m[9];r[1]=(V3.dot(v,tmp)+m[13])/w;tmp[0]=m[2];tmp[1]=m[6];tmp[2]=m[10];r[2]=(V3.dot(v,tmp)+m[14])/w;return r;};var M4x4={};M4x4._temp1=new MJS_FLOAT_ARRAY_TYPE(16);M4x4._temp2=new MJS_FLOAT_ARRAY_TYPE(16);if(MJS_FLOAT_ARRAY_TYPE===Array){M4x4.I=[1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0];M4x4.$=function M4x4_$(m00,m01,m02,m03,m04,m05,m06,m07,m08,m09,m10,m11,m12,m13,m14,m15)
{return[m00,m01,m02,m03,m04,m05,m06,m07,m08,m09,m10,m11,m12,m13,m14,m15];};M4x4.clone=function M4x4_clone(m){return new MJS_FLOAT_ARRAY_TYPE(m[0],m[1],m[2],m[3],m[4],m[5],m[6],m[7],m[8],m[9],m[10],m[11],m[12],m[13],m[14],m[15]);};}else{M4x4.I=new MJS_FLOAT_ARRAY_TYPE([1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0]);M4x4.$=function M4x4_$(m00,m01,m02,m03,m04,m05,m06,m07,m08,m09,m10,m11,m12,m13,m14,m15)
{return new MJS_FLOAT_ARRAY_TYPE([m00,m01,m02,m03,m04,m05,m06,m07,m08,m09,m10,m11,m12,m13,m14,m15]);};M4x4.clone=function M4x4_clone(m){return new MJS_FLOAT_ARRAY_TYPE(m);};}
M4x4.identity=M4x4.I;M4x4.topLeft3x3=function M4x4_topLeft3x3(m,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(9);}
r[0]=m[0];r[1]=m[1];r[2]=m[2];r[3]=m[4];r[4]=m[5];r[5]=m[6];r[6]=m[8];r[7]=m[9];r[8]=m[10];return r;};M4x4.inverseOrthonormal=function M4x4_inverseOrthonormal(m,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
M4x4.transpose(m,r);var t=[m[12],m[13],m[14]];r[3]=r[7]=r[11]=0;r[12]=-V3.dot([r[0],r[4],r[8]],t);r[13]=-V3.dot([r[1],r[5],r[9]],t);r[14]=-V3.dot([r[2],r[6],r[10]],t);return r;};M4x4.inverseTo3x3=function M4x4_inverseTo3x3(m,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(9);}
var a11=m[10]*m[5]-m[6]*m[9],a21=-m[10]*m[1]+m[2]*m[9],a31=m[6]*m[1]-m[2]*m[5],a12=-m[10]*m[4]+m[6]*m[8],a22=m[10]*m[0]-m[2]*m[8],a32=-m[6]*m[0]+m[2]*m[4],a13=m[9]*m[4]-m[5]*m[8],a23=-m[9]*m[0]+m[1]*m[8],a33=m[5]*m[0]-m[1]*m[4];var det=m[0]*(a11)+m[1]*(a12)+m[2]*(a13);if(det===0){throw"matrix not invertible";}
var idet=1.0/det;r[0]=idet*a11;r[1]=idet*a21;r[2]=idet*a31;r[3]=idet*a12;r[4]=idet*a22;r[5]=idet*a32;r[6]=idet*a13;r[7]=idet*a23;r[8]=idet*a33;return r;};M4x4.makeFrustum=function M4x4_makeFrustum(left,right,bottom,top,znear,zfar,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
var X=2*znear/(right-left);var Y=2*znear/(top-bottom);var A=(right+left)/(right-left);var B=(top+bottom)/(top-bottom);var C=-(zfar+znear)/(zfar-znear);var D=-2*zfar*znear/(zfar-znear);r[0]=2*znear/(right-left);r[1]=0;r[2]=0;r[3]=0;r[4]=0;r[5]=2*znear/(top-bottom);r[6]=0;r[7]=0;r[8]=(right+left)/(right-left);r[9]=(top+bottom)/(top-bottom);r[10]=-(zfar+znear)/(zfar-znear);r[11]=-1;r[12]=0;r[13]=0;r[14]=-2*zfar*znear/(zfar-znear);r[15]=0;return r;};M4x4.makePerspective=function M4x4_makePerspective(fovy,aspect,znear,zfar,r){var ymax=znear*Math.tan(fovy*Math.PI/360.0);var ymin=-ymax;var xmin=ymin*aspect;var xmax=ymax*aspect;return M4x4.makeFrustum(xmin,xmax,ymin,ymax,znear,zfar,r);};M4x4.makeOrtho=function M4x4_makeOrtho(left,right,bottom,top,znear,zfar,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
var tX=-(right+left)/(right-left);var tY=-(top+bottom)/(top-bottom);var tZ=-(zfar+znear)/(zfar-znear);var X=2/(right-left);var Y=2/(top-bottom);var Z=-2/(zfar-znear);r[0]=2/(right-left);r[1]=0;r[2]=0;r[3]=0;r[4]=0;r[5]=2/(top-bottom);r[6]=0;r[7]=0;r[8]=0;r[9]=0;r[10]=-2/(zfar-znear);r[11]=0;r[12]=-(right+left)/(right-left);r[13]=-(top+bottom)/(top-bottom);r[14]=-(zfar+znear)/(zfar-znear);r[15]=1;return r;};M4x4.makeOrtho2D=function M4x4_makeOrtho2D(left,right,bottom,top,r){return M4x4.makeOrtho(left,right,bottom,top,-1,1,r);};M4x4.mul=function M4x4_mul(a,b,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
var a11=a[0];var a21=a[1];var a31=a[2];var a41=a[3];var a12=a[4];var a22=a[5];var a32=a[6];var a42=a[7];var a13=a[8];var a23=a[9];var a33=a[10];var a43=a[11];var a14=a[12];var a24=a[13];var a34=a[14];var a44=a[15];var b11=b[0];var b21=b[1];var b31=b[2];var b41=b[3];var b12=b[4];var b22=b[5];var b32=b[6];var b42=b[7];var b13=b[8];var b23=b[9];var b33=b[10];var b43=b[11];var b14=b[12];var b24=b[13];var b34=b[14];var b44=b[15];r[0]=a11*b11+a12*b21+a13*b31+a14*b41;r[1]=a21*b11+a22*b21+a23*b31+a24*b41;r[2]=a31*b11+a32*b21+a33*b31+a34*b41;r[3]=a41*b11+a42*b21+a43*b31+a44*b41;r[4]=a11*b12+a12*b22+a13*b32+a14*b42;r[5]=a21*b12+a22*b22+a23*b32+a24*b42;r[6]=a31*b12+a32*b22+a33*b32+a34*b42;r[7]=a41*b12+a42*b22+a43*b32+a44*b42;r[8]=a11*b13+a12*b23+a13*b33+a14*b43;r[9]=a21*b13+a22*b23+a23*b33+a24*b43;r[10]=a31*b13+a32*b23+a33*b33+a34*b43;r[11]=a41*b13+a42*b23+a43*b33+a44*b43;r[12]=a11*b14+a12*b24+a13*b34+a14*b44;r[13]=a21*b14+a22*b24+a23*b34+a24*b44;r[14]=a31*b14+a32*b24+a33*b34+a34*b44;r[15]=a41*b14+a42*b24+a43*b34+a44*b44;return r;};M4x4.mulOffset=function M4x4_mulOffset(a,b,r,o){var a11=a[0];var a21=a[1];var a31=a[2];var a41=a[3];var a12=a[4];var a22=a[5];var a32=a[6];var a42=a[7];var a13=a[8];var a23=a[9];var a33=a[10];var a43=a[11];var a14=a[12];var a24=a[13];var a34=a[14];var a44=a[15];var b11=b[0];var b21=b[1];var b31=b[2];var b41=b[3];var b12=b[4];var b22=b[5];var b32=b[6];var b42=b[7];var b13=b[8];var b23=b[9];var b33=b[10];var b43=b[11];var b14=b[12];var b24=b[13];var b34=b[14];var b44=b[15];r[o+0]=a11*b11+a12*b21+a13*b31+a14*b41;r[o+1]=a21*b11+a22*b21+a23*b31+a24*b41;r[o+2]=a31*b11+a32*b21+a33*b31+a34*b41;r[o+3]=a41*b11+a42*b21+a43*b31+a44*b41;r[o+4]=a11*b12+a12*b22+a13*b32+a14*b42;r[o+5]=a21*b12+a22*b22+a23*b32+a24*b42;r[o+6]=a31*b12+a32*b22+a33*b32+a34*b42;r[o+7]=a41*b12+a42*b22+a43*b32+a44*b42;r[o+8]=a11*b13+a12*b23+a13*b33+a14*b43;r[o+9]=a21*b13+a22*b23+a23*b33+a24*b43;r[o+10]=a31*b13+a32*b23+a33*b33+a34*b43;r[o+11]=a41*b13+a42*b23+a43*b33+a44*b43;r[o+12]=a11*b14+a12*b24+a13*b34+a14*b44;r[o+13]=a21*b14+a22*b24+a23*b34+a24*b44;r[o+14]=a31*b14+a32*b24+a33*b34+a34*b44;r[o+15]=a41*b14+a42*b24+a43*b34+a44*b44;return r;};M4x4.mulAffine=function M4x4_mulAffine(a,b,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
var a11=a[0];var a21=a[1];var a31=a[2];var a12=a[4];var a22=a[5];var a32=a[6];var a13=a[8];var a23=a[9];var a33=a[10];var a14=a[12];var a24=a[13];var a34=a[14];var b11=b[0];var b21=b[1];var b31=b[2];var b12=b[4];var b22=b[5];var b32=b[6];var b13=b[8];var b23=b[9];var b33=b[10];var b14=b[12];var b24=b[13];var b34=b[14];r[0]=a11*b11+a12*b21+a13*b31;r[1]=a21*b11+a22*b21+a23*b31;r[2]=a31*b11+a32*b21+a33*b31;r[3]=0;r[4]=a11*b12+a12*b22+a13*b32;r[5]=a21*b12+a22*b22+a23*b32;r[6]=a31*b12+a32*b22+a33*b32;r[7]=0;r[8]=a11*b13+a12*b23+a13*b33;r[9]=a21*b13+a22*b23+a23*b33;r[10]=a31*b13+a32*b23+a33*b33;r[11]=0;r[12]=a11*b14+a12*b24+a13*b34+a14;r[13]=a21*b14+a22*b24+a23*b34+a24;r[14]=a31*b14+a32*b24+a33*b34+a34;r[15]=1;return r;};M4x4.mulAffine=function M4x4_mulAffine(a,b,r,o){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
var a11=a[0];var a21=a[1];var a31=a[2];var a12=a[4];var a22=a[5];var a32=a[6];var a13=a[8];var a23=a[9];var a33=a[10];var a14=a[12];var a24=a[13];var a34=a[14];var b11=b[0];var b21=b[1];var b31=b[2];var b12=b[4];var b22=b[5];var b32=b[6];var b13=b[8];var b23=b[9];var b33=b[10];var b14=b[12];var b24=b[13];var b34=b[14];r[o+0]=a11*b11+a12*b21+a13*b31;r[o+1]=a21*b11+a22*b21+a23*b31;r[o+2]=a31*b11+a32*b21+a33*b31;r[o+3]=0;r[o+4]=a11*b12+a12*b22+a13*b32;r[o+5]=a21*b12+a22*b22+a23*b32;r[o+6]=a31*b12+a32*b22+a33*b32;r[o+7]=0;r[o+8]=a11*b13+a12*b23+a13*b33;r[o+9]=a21*b13+a22*b23+a23*b33;r[o+10]=a31*b13+a32*b23+a33*b33;r[o+11]=0;r[o+12]=a11*b14+a12*b24+a13*b34+a14;r[o+13]=a21*b14+a22*b24+a23*b34+a24;r[o+14]=a31*b14+a32*b24+a33*b34+a34;r[o+15]=1;return r;};M4x4.makeRotate=function M4x4_makeRotate(angle,axis,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
axis=V3.normalize(axis,V3._temp1);var x=axis[0],y=axis[1],z=axis[2];var c=Math.cos(angle);var c1=1-c;var s=Math.sin(angle);r[0]=x*x*c1+c;r[1]=y*x*c1+z*s;r[2]=z*x*c1-y*s;r[3]=0;r[4]=x*y*c1-z*s;r[5]=y*y*c1+c;r[6]=y*z*c1+x*s;r[7]=0;r[8]=x*z*c1+y*s;r[9]=y*z*c1-x*s;r[10]=z*z*c1+c;r[11]=0;r[12]=0;r[13]=0;r[14]=0;r[15]=1;return r;};M4x4.rotate=function M4x4_rotate(angle,axis,m,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
var a0=axis[0],a1=axis[1],a2=axis[2];var l=Math.sqrt(a0*a0+a1*a1+a2*a2);var x=a0,y=a1,z=a2;if(l!==1.0){var im=1.0/l;x*=im;y*=im;z*=im;}
var c=Math.cos(angle);var c1=1-c;var s=Math.sin(angle);var xs=x*s;var ys=y*s;var zs=z*s;var xyc1=x*y*c1;var xzc1=x*z*c1;var yzc1=y*z*c1;var m11=m[0];var m21=m[1];var m31=m[2];var m41=m[3];var m12=m[4];var m22=m[5];var m32=m[6];var m42=m[7];var m13=m[8];var m23=m[9];var m33=m[10];var m43=m[11];var t11=x*x*c1+c;var t21=xyc1+zs;var t31=xzc1-ys;var t12=xyc1-zs;var t22=y*y*c1+c;var t32=yzc1+xs;var t13=xzc1+ys;var t23=yzc1-xs;var t33=z*z*c1+c;r[0]=m11*t11+m12*t21+m13*t31;r[1]=m21*t11+m22*t21+m23*t31;r[2]=m31*t11+m32*t21+m33*t31;r[3]=m41*t11+m42*t21+m43*t31;r[4]=m11*t12+m12*t22+m13*t32;r[5]=m21*t12+m22*t22+m23*t32;r[6]=m31*t12+m32*t22+m33*t32;r[7]=m41*t12+m42*t22+m43*t32;r[8]=m11*t13+m12*t23+m13*t33;r[9]=m21*t13+m22*t23+m23*t33;r[10]=m31*t13+m32*t23+m33*t33;r[11]=m41*t13+m42*t23+m43*t33;if(r!==m){r[12]=m[12];r[13]=m[13];r[14]=m[14];r[15]=m[15];}
return r;};M4x4.makeScale3=function M4x4_makeScale3(x,y,z,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
r[0]=x;r[1]=0;r[2]=0;r[3]=0;r[4]=0;r[5]=y;r[6]=0;r[7]=0;r[8]=0;r[9]=0;r[10]=z;r[11]=0;r[12]=0;r[13]=0;r[14]=0;r[15]=1;return r;};M4x4.makeScale1=function M4x4_makeScale1(k,r){return M4x4.makeScale3(k,k,k,r);};M4x4.makeScale=function M4x4_makeScale(v,r){return M4x4.makeScale3(v[0],v[1],v[2],r);};M4x4.scale3=function M4x4_scale3(x,y,z,m,r){if(r===m){m[0]*=x;m[1]*=x;m[2]*=x;m[3]*=x;m[4]*=y;m[5]*=y;m[6]*=y;m[7]*=y;m[8]*=z;m[9]*=z;m[10]*=z;m[11]*=z;return m;}
if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
r[0]=m[0]*x;r[1]=m[1]*x;r[2]=m[2]*x;r[3]=m[3]*x;r[4]=m[4]*y;r[5]=m[5]*y;r[6]=m[6]*y;r[7]=m[7]*y;r[8]=m[8]*z;r[9]=m[9]*z;r[10]=m[10]*z;r[11]=m[11]*z;r[12]=m[12];r[13]=m[13];r[14]=m[14];r[15]=m[15];return r;};M4x4.scale1=function M4x4_scale1(k,m,r){if(r===m){m[0]*=k;m[1]*=k;m[2]*=k;m[3]*=k;m[4]*=k;m[5]*=k;m[6]*=k;m[7]*=k;m[8]*=k;m[9]*=k;m[10]*=k;m[11]*=k;return m;}
if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
r[0]=m[0]*k;r[1]=m[1]*k;r[2]=m[2]*k;r[3]=m[3]*k;r[4]=m[4]*k;r[5]=m[5]*k;r[6]=m[6]*k;r[7]=m[7]*k;r[8]=m[8]*k;r[9]=m[9]*k;r[10]=m[10]*k;r[11]=m[11]*k;r[12]=m[12];r[13]=m[13];r[14]=m[14];r[15]=m[15];return r;};M4x4.scale=function M4x4_scale(v,m,r){var x=v[0],y=v[1],z=v[2];if(r===m){m[0]*=x;m[1]*=x;m[2]*=x;m[3]*=x;m[4]*=y;m[5]*=y;m[6]*=y;m[7]*=y;m[8]*=z;m[9]*=z;m[10]*=z;m[11]*=z;return m;}
if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
r[0]=m[0]*x;r[1]=m[1]*x;r[2]=m[2]*x;r[3]=m[3]*x;r[4]=m[4]*y;r[5]=m[5]*y;r[6]=m[6]*y;r[7]=m[7]*y;r[8]=m[8]*z;r[9]=m[9]*z;r[10]=m[10]*z;r[11]=m[11]*z;r[12]=m[12];r[13]=m[13];r[14]=m[14];r[15]=m[15];return r;};M4x4.makeTranslate3=function M4x4_makeTranslate3(x,y,z,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
r[0]=1;r[1]=0;r[2]=0;r[3]=0;r[4]=0;r[5]=1;r[6]=0;r[7]=0;r[8]=0;r[9]=0;r[10]=1;r[11]=0;r[12]=x;r[13]=y;r[14]=z;r[15]=1;return r;};M4x4.makeTranslate1=function M4x4_makeTranslate1(k,r){return M4x4.makeTranslate3(k,k,k,r);};M4x4.makeTranslate=function M4x4_makeTranslate(v,r){return M4x4.makeTranslate3(v[0],v[1],v[2],r);};M4x4.translate3Self=function M4x4_translate3Self(x,y,z,m){m[12]+=m[0]*x+m[4]*y+m[8]*z;m[13]+=m[1]*x+m[5]*y+m[9]*z;m[14]+=m[2]*x+m[6]*y+m[10]*z;m[15]+=m[3]*x+m[7]*y+m[11]*z;return m;};M4x4.translate3=function M4x4_translate3(x,y,z,m,r){if(r===m){m[12]+=m[0]*x+m[4]*y+m[8]*z;m[13]+=m[1]*x+m[5]*y+m[9]*z;m[14]+=m[2]*x+m[6]*y+m[10]*z;m[15]+=m[3]*x+m[7]*y+m[11]*z;return m;}
if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
var m11=m[0];var m21=m[1];var m31=m[2];var m41=m[3];var m12=m[4];var m22=m[5];var m32=m[6];var m42=m[7];var m13=m[8];var m23=m[9];var m33=m[10];var m43=m[11];r[0]=m11;r[1]=m21;r[2]=m31;r[3]=m41;r[4]=m12;r[5]=m22;r[6]=m32;r[7]=m42;r[8]=m13;r[9]=m23;r[10]=m33;r[11]=m43;r[12]=m11*x+m12*y+m13*z+m[12];r[13]=m21*x+m22*y+m23*z+m[13];r[14]=m31*x+m32*y+m33*z+m[14];r[15]=m41*x+m42*y+m43*z+m[15];return r;};M4x4.translate1=function M4x4_translate1(k,m,r){return M4x4.translate3(k,k,k,m,r);};M4x4.translateSelf=function M4x4_translateSelf(v,m){var x=v[0],y=v[1],z=v[2];m[12]+=m[0]*x+m[4]*y+m[8]*z;m[13]+=m[1]*x+m[5]*y+m[9]*z;m[14]+=m[2]*x+m[6]*y+m[10]*z;m[15]+=m[3]*x+m[7]*y+m[11]*z;return m;};M4x4.translate=function M4x4_translate(v,m,r){var x=v[0],y=v[1],z=v[2];if(r===m){m[12]+=m[0]*x+m[4]*y+m[8]*z;m[13]+=m[1]*x+m[5]*y+m[9]*z;m[14]+=m[2]*x+m[6]*y+m[10]*z;m[15]+=m[3]*x+m[7]*y+m[11]*z;return m;}
if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
var m11=m[0];var m21=m[1];var m31=m[2];var m41=m[3];var m12=m[4];var m22=m[5];var m32=m[6];var m42=m[7];var m13=m[8];var m23=m[9];var m33=m[10];var m43=m[11];r[0]=m11;r[1]=m21;r[2]=m31;r[3]=m41;r[4]=m12;r[5]=m22;r[6]=m32;r[7]=m42;r[8]=m13;r[9]=m23;r[10]=m33;r[11]=m43;r[12]=m11*x+m12*y+m13*z+m[12];r[13]=m21*x+m22*y+m23*z+m[13];r[14]=m31*x+m32*y+m33*z+m[14];r[15]=m41*x+m42*y+m43*z+m[15];return r;};M4x4.makeLookAt=function M4x4_makeLookAt(eye,center,up,r){var z=V3.direction(eye,center,V3._temp1);var x=V3.normalize(V3.cross(up,z,V3._temp2),V3._temp2);var y=V3.normalize(V3.cross(z,x,V3._temp3),V3._temp3);var tm1=M4x4._temp1;var tm2=M4x4._temp2;tm1[0]=x[0];tm1[1]=y[0];tm1[2]=z[0];tm1[3]=0;tm1[4]=x[1];tm1[5]=y[1];tm1[6]=z[1];tm1[7]=0;tm1[8]=x[2];tm1[9]=y[2];tm1[10]=z[2];tm1[11]=0;tm1[12]=0;tm1[13]=0;tm1[14]=0;tm1[15]=1;tm2[0]=1;tm2[1]=0;tm2[2]=0;tm2[3]=0;tm2[4]=0;tm2[5]=1;tm2[6]=0;tm2[7]=0;tm2[8]=0;tm2[9]=0;tm2[10]=1;tm2[11]=0;tm2[12]=-eye[0];tm2[13]=-eye[1];tm2[14]=-eye[2];tm2[15]=1;if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
return M4x4.mul(tm1,tm2,r);};M4x4.transposeSelf=function M4x4_transposeSelf(m){var tmp=m[1];m[1]=m[4];m[4]=tmp;tmp=m[2];m[2]=m[8];m[8]=tmp;tmp=m[3];m[3]=m[12];m[12]=tmp;tmp=m[6];m[6]=m[9];m[9]=tmp;tmp=m[7];m[7]=m[13];m[13]=tmp;tmp=m[11];m[11]=m[14];m[14]=tmp;return m;};M4x4.transpose=function M4x4_transpose(m,r){if(m===r){var tmp=0.0;tmp=m[1];m[1]=m[4];m[4]=tmp;tmp=m[2];m[2]=m[8];m[8]=tmp;tmp=m[3];m[3]=m[12];m[12]=tmp;tmp=m[6];m[6]=m[9];m[9]=tmp;tmp=m[7];m[7]=m[13];m[13]=tmp;tmp=m[11];m[11]=m[14];m[14]=tmp;return m;}
if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(16);}
r[0]=m[0];r[1]=m[4];r[2]=m[8];r[3]=m[12];r[4]=m[1];r[5]=m[5];r[6]=m[9];r[7]=m[13];r[8]=m[2];r[9]=m[6];r[10]=m[10];r[11]=m[14];r[12]=m[3];r[13]=m[7];r[14]=m[11];r[15]=m[15];return r;};M4x4.transformPoint=function M4x4_transformPoint(m,v,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
var v0=v[0],v1=v[1],v2=v[2];r[0]=m[0]*v0+m[4]*v1+m[8]*v2+m[12];r[1]=m[1]*v0+m[5]*v1+m[9]*v2+m[13];r[2]=m[2]*v0+m[6]*v1+m[10]*v2+m[14];var w=m[3]*v0+m[7]*v1+m[11]*v2+m[15];if(w!==1.0){r[0]/=w;r[1]/=w;r[2]/=w;}
return r;};M4x4.transformLine=function M4x4_transformLine(m,v,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
var v0=v[0],v1=v[1],v2=v[2];r[0]=m[0]*v0+m[4]*v1+m[8]*v2;r[1]=m[1]*v0+m[5]*v1+m[9]*v2;r[2]=m[2]*v0+m[6]*v1+m[10]*v2;var w=m[3]*v0+m[7]*v1+m[11]*v2;if(w!==1.0){r[0]/=w;r[1]/=w;r[2]/=w;}
return r;};M4x4.transformPointAffine=function M4x4_transformPointAffine(m,v,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
var v0=v[0],v1=v[1],v2=v[2];r[0]=m[0]*v0+m[4]*v1+m[8]*v2+m[12];r[1]=m[1]*v0+m[5]*v1+m[9]*v2+m[13];r[2]=m[2]*v0+m[6]*v1+m[10]*v2+m[14];return r;};M4x4.transformLineAffine=function M4x4_transformLineAffine(m,v,r){if(r===undefined){r=new MJS_FLOAT_ARRAY_TYPE(3);}
var v0=v[0],v1=v[1],v2=v[2];r[0]=m[0]*v0+m[4]*v1+m[8]*v2;r[1]=m[1]*v0+m[5]*v1+m[9]*v2;r[2]=m[2]*v0+m[6]*v1+m[10]*v2;return r;};var ASCParser=(function(){function ASCParser(config){var undef;var theParser;var __empty_func=function(){};var start=config.start||__empty_func;var parse=config.parse||__empty_func;var end=config.end||__empty_func;var VERSION="0.2";var XHR_DONE=4;var UNKNOWN=-1;var VERTS=0;var VERTS_COLS=1;var VERTS_NORMS=2;var VERTS_COLS_NORMS=3;var pathToFile=null;var fileSizeInBytes=0;var numParsedPoints=0;var numTotalPoints=0;var progress=0;var numValuesPerLine=-1;var colorsPresent=false;var normalsPresent=false;var layoutCode=UNKNOWN;var onProgressCalled=false;var XHR;var startOfNextChunk;var lastNewLineIndex;var getDataLayout=function(values){var firstLine=values.substr(0,values.indexOf("\n"));firstLine=firstLine.replace(/^\s+/,"");firstLine=firstLine.replace(/\s+$/,"");var numWhiteSpaceChunks=firstLine.split(/\s+/).length-1;if(numWhiteSpaceChunks===8){return VERTS_COLS_NORMS;}
if(numWhiteSpaceChunks===2){return VERTS;}
var str="";var i;for(i=0;i<500&&i<values.length;i++){str+=values[i];}
var str_split=str.split(/\s+/);var data=[];for(i=3;i<str_split.length;i+=3){data.push(str_split[i]);i++;data.push(str_split[i]);i++;data.push(str_split[i]);i++;}
for(i=0;i<data.length;i+=3){if(data[i]<0||data[i+1]<0||data[i+2]<0){return VERTS_NORMS;}
if(data[i]>1||data[i+1]>1||data[i+2]>1){return VERTS_COLS;}}
for(i=0;i<data.length;i+=3){var mag=data[i]*data[i]+data[i+1]*data[i+1]+data[i+2]*data[i+2];if(mag>1.0001||mag<0.999){return VERTS_COLS;}}
return VERTS_NORMS;};var parseChunk=function(chunk){if(chunk!==""){if(layoutCode===UNKNOWN){layoutCode=getDataLayout(chunk);switch(layoutCode){case VERTS:numValuesPerLine=3;break;case VERTS_COLS:numValuesPerLine=6;colorsPresent=true;break;case VERTS_NORMS:numValuesPerLine=6;normalsPresent=true;break;case VERTS_COLS_NORMS:numValuesPerLine=9;normalsPresent=true;colorsPresent=true;break;default:break;}}
chunk=chunk.replace(/\s+$/,"");chunk=chunk.replace(/^\s+/,"");chunk=chunk.split(/\s+/);var numVerts=chunk.length/numValuesPerLine;numParsedPoints+=numVerts;var verts=new Float32Array(numVerts*3);var cols=colorsPresent?new Float32Array(numVerts*3):null;var norms=normalsPresent?new Float32Array(numVerts*3):null;var valueOffset=0;if(colorsPresent){valueOffset=3;}
for(var i=0,j=0,len=chunk.length;i<len;i+=numValuesPerLine,j+=3){verts[j]=parseFloat(chunk[i]);verts[j+1]=parseFloat(chunk[i+1]);verts[j+2]=parseFloat(chunk[i+2]);if(cols){cols[j]=parseInt(chunk[i+3],10)/255;cols[j+1]=parseInt(chunk[i+4],10)/255;cols[j+2]=parseInt(chunk[i+5],10)/255;}
if(norms){norms[j]=parseFloat(chunk[i+3+valueOffset]);norms[j+1]=parseFloat(chunk[i+4+valueOffset]);norms[j+2]=parseFloat(chunk[i+5+valueOffset]);}}
var attributes={};if(verts){attributes["ps_Vertex"]=verts;}
if(cols){attributes["ps_Color"]=cols;}
if(norms){attributes["ps_Normal"]=norms;}
parse(theParser,attributes);}};this.__defineGetter__("version",function(){return VERSION;});this.__defineGetter__("numParsedPoints",function(){return numParsedPoints;});this.__defineGetter__("numTotalPoints",function(){return numTotalPoints;});this.__defineGetter__("progress",function(){return progress;});this.__defineGetter__("fileSize",function(){return fileSizeInBytes;});this.stop=function(){if(XHR){XHR.abort();}};this.load=function(path){pathToFile=path;XHR=new XMLHttpRequest();theParser=this;XHR.onloadstart=function(evt){start(theParser);};XHR.onload=function(evt){var ascData=XHR.responseText;var chunk=null;if(onProgressCalled===false){chunk=ascData;}
else if(ascData.length-lastNewLineIndex>1){chunk=ascData.substring(lastNewLineIndex,ascData.length);}
if(chunk&&chunk.match(/[0-9]/)){parseChunk(chunk);}
numTotalPoints=numParsedPoints;progress=1;end(theParser);};XHR.onprogress=function(evt){var chunk;if(evt.lengthComputable){fileSizeInBytes=evt.total;progress=evt.loaded/evt.total;}
onProgressCalled=true;if(XHR.responseText&&XHR.responseText.length>500){var ascData=XHR.responseText;lastNewLineIndex=ascData.lastIndexOf("\n");if(XHR.readyState===XHR_DONE){chunk=ascData.substring(startOfNextChunk,ascData.length);if(chunk.match(/[0-9]/)){parseChunk(chunk);}}
else{chunk=ascData.substring(startOfNextChunk,lastNewLineIndex+1);startOfNextChunk=lastNewLineIndex+1;parseChunk(chunk);}}};if(XHR.overrideMimeType){XHR.overrideMimeType("application/json");}
XHR.open("GET",path,true);XHR.send(null);};}
return ASCParser;}());var PTSParser=(function(){function PTSParser(config){var undef;var __empty_func=function(){};var start=config.start||__empty_func;var parse=config.parse||__empty_func;var end=config.end||__empty_func;const VERSION="0.1";const XHR_DONE=4;var pathToFile=null;var fileSizeInBytes=0;var numParsedPoints=0;var numTotalPoints=0;var progress=0;var onProgressCalled=false;var AJAX=null;this.__defineGetter__("version",function(){return VERSION;});this.__defineGetter__("numParsedPoints",function(){return numParsedPoints;});this.__defineGetter__("numTotalPoints",function(){return numTotalPoints;});this.__defineGetter__("progress",function(){return progress;});this.__defineGetter__("fileSize",function(){return fileSizeInBytes;});this.stop=function(){if(AJAX){AJAX.abort();}};this.load=function(path){pathToFile=path;AJAX=new XMLHttpRequest();AJAX.parser=this;AJAX.onloadstart=function(evt){start(AJAX.parser);};AJAX.onload=function(evt){var data=AJAX.responseText;var chunk=null;if(onProgressCalled===false){chunk=data;}
else if(data.length-AJAX.lastNewLineIndex>1){chunk=data.substring(AJAX.lastNewLineIndex,data.length);}
if(chunk&&chunk.match(/[0-9]/)){AJAX.parseChunk(chunk);}
numTotalPoints=numParsedPoints;progress=1;end(AJAX.parser);};AJAX.parseChunk=function(chunkData){var chunk=chunkData;if(chunk!==""){numPoints=chunk.match(/^[0-9]+\n/);numTotalPoints+=parseInt(numPoints,10);chunk=chunk.replace(/^[0-9]+\n/,"");chunk=chunk.replace(/\s+$/,"");chunk=chunk.replace(/^\s+/,"");chunk=chunk.split(/\s+/);const numValuesPerLine=7;var numVerts=chunk.length/numValuesPerLine;numParsedPoints+=numVerts;var verts=new Float32Array(numVerts*3);var cols=new Float32Array(numVerts*3);for(var i=0,j=0;i<chunk.length;i+=numValuesPerLine,j+=3){verts[j]=parseFloat(chunk[i]);verts[j+1]=parseFloat(chunk[i+1]);verts[j+2]=parseFloat(chunk[i+2]);cols[j]=parseInt(chunk[i+4],10)/255;cols[j+1]=parseInt(chunk[i+5],10)/255;cols[j+2]=parseInt(chunk[i+6],10)/255;}
var attributes={};if(verts){attributes["ps_Vertex"]=verts;}
if(cols){attributes["ps_Color"]=cols;}
parse(AJAX.parser,attributes);}};AJAX.onprogress=function(evt){if(evt.lengthComputable){fileSizeInBytes=evt.total;progress=evt.loaded/evt.total;}
onProgressCalled=true;if(AJAX.responseText){var chunk;var data=AJAX.responseText;var lastNewLineIndex=data.lastIndexOf("\n");AJAX.lastNewLineIndex=lastNewLineIndex;if(AJAX.readyState===XHR_DONE){chunk=data.substring(AJAX.startOfNextChunk,data.length);if(chunk.match(/[0-9]/)){AJAX.parseChunk(chunk);}}
else{chunk=data.substring(AJAX.startOfNextChunk,lastNewLineIndex+1);AJAX.startOfNextChunk=lastNewLineIndex+1;AJAX.parseChunk(chunk);}}};if(AJAX.overrideMimeType){AJAX.overrideMimeType("application/json");}
AJAX.open("GET",path,true);AJAX.send(null);};}
return PTSParser;}());var PSIParser=(function(){function PSIParser(config){var subParser;var __empty_func=function(){};var start=config.start||__empty_func;var parse=config.parse||__empty_func;var end=config.end||__empty_func;var version="0.6";const UNKNOWN=-1;const XHR_DONE=4;const STARTED=1;const PSI2="psi2";const HPS0="hps0";var pathToFile=null;var fileSize=0;var fileType;var numParsedPoints=0;var numTotalPoints=0;var progress=0;var BUFFER_SIZE=30000;var tempBufferV;var tempBufferOffsetV=0;var tempBufferC;var tempBufferOffsetC=0;var tempBufferN;var tempBufferOffsetN=0;var AJAX=null;var getFileType=function(textData){var type;if(textData.length<6){return;}
type=textData.substring(0,4);if(type==="psi2"){fileType=PSI2;subParser=new PSI2Parser();}
else{type=textData.substring(0,6);if(type==="<hps0>"){fileType=HPS0;subParser=new HPS0Parser();}}};var partitionArray=function(arr,tempBuffer,tempBufferOffset,AttribID){if(arr.length+tempBufferOffset<BUFFER_SIZE){if(!tempBuffer){tempBuffer=new Float32Array(BUFFER_SIZE);tempBuffer.set(arr);}
else{tempBuffer.set(arr,tempBufferOffset);}
tempBufferOffset+=arr.length;}
else if(arr.length+tempBufferOffset>=BUFFER_SIZE){var counter=0;var numBuffersToFill=parseInt(arr.length/BUFFER_SIZE,10);if(tempBufferOffset>0){var amtToFill=BUFFER_SIZE-tempBufferOffset;tempBuffer.set(arr.subarray(0,amtToFill),tempBufferOffset);switch(AttribID){case 1:numParsedPoints+=BUFFER_SIZE/3;parse(AJAX.parser,{"ps_Vertex":tempBuffer});break;case 2:parse(AJAX.parser,{"ps_Color":tempBuffer});break;case 3:parse(AJAX.parser,{"ps_Normal":tempBuffer});break;default:break;}
numBuffersToFill=parseInt((arr.length-amtToFill)/BUFFER_SIZE,10);counter=amtToFill;}
for(var buffIter=0;buffIter<numBuffersToFill;buffIter++){var buffer=new Float32Array(BUFFER_SIZE);buffer.set(arr.subarray(counter,counter+BUFFER_SIZE));switch(AttribID){case 1:numParsedPoints+=BUFFER_SIZE/3;parse(AJAX.parser,{"ps_Vertex":buffer});break;case 2:parse(AJAX.parser,{"ps_Color":buffer});break;case 3:parse(AJAX.parser,{"ps_Normal":buffer});break;default:break;}
counter+=BUFFER_SIZE;}
tempBuffer=new Float32Array(BUFFER_SIZE);tempBuffer.set(arr.subarray(counter,counter+arr.length));tempBufferOffset=arr.length-counter;}
return{buffer:tempBuffer,offset:tempBufferOffset};};this.__defineGetter__("version",function(){return version;});this.__defineGetter__("numParsedPoints",function(){return numParsedPoints;});this.__defineGetter__("numTotalPoints",function(){if(subParser){subParser.numTotalPoints;}});this.__defineGetter__("progress",function(){return progress;});this.__defineGetter__("fileSize",function(){return fileSize;});this.stop=function(){if(AJAX){AJAX.abort();}};this.load=function(path){pathToFile=path;AJAX=new XMLHttpRequest();AJAX.parser=this;AJAX.onloadstart=function(evt){start(AJAX.parser);};AJAX.onload=function(evt){var textData=AJAX.responseText;var o;if(!fileType){getFileType(textData);var attributes=subParser.onload(textData);numParsedPoints=numTotalPoints=subParser.numTotalPoints;parse(AJAX.parser,attributes);progress=1;end(AJAX.parser);return;}
var attr=subParser.onload(textData);numTotalPoints=subParser.numTotalPoints;if(attr){if(attr.ps_Vertex){o=partitionArray(attr.ps_Vertex,tempBufferV,tempBufferOffsetV,1);tempBufferV=o.buffer;tempBufferOffsetV=o.offset;}
if(attr.ps_Color){o=partitionArray(attr.ps_Color,tempBufferC,tempBufferOffsetC,2);tempBufferC=o.buffer;tempBufferOffsetC=o.offset;}
if(attr.ps_Normal){o=partitionArray(attr.ps_Normal,tempBufferN,tempBufferOffsetN,3);tempBufferN=o.buffer;tempBufferOffsetN=o.offset;}}
if(tempBufferV&&tempBufferOffsetV>0){var lastBufferV=tempBufferV.subarray(0,tempBufferOffsetV);numParsedPoints+=tempBufferOffsetV/3;parse(AJAX.parser,{"ps_Vertex":lastBufferV});}
if(tempBufferC&&tempBufferOffsetC>0){var lastBufferC=tempBufferC.subarray(0,tempBufferOffsetC);parse(AJAX.parser,{"ps_Color":lastBufferC});}
if(tempBufferN&&tempBufferOffsetN>0){var lastBufferN=tempBufferN.subarray(0,tempBufferOffsetN);parse(AJAX.parser,{"ps_Normal":lastBufferN});}
progress=1;end(AJAX.parser);};AJAX.onprogress=function(evt){var textData=AJAX.responseText;var o;if(!textData||textData.length<6){return;}
if(evt.lengthComputable){fileSize=evt.total;progress=evt.loaded/evt.total;}
if(!fileType){getFileType(textData);}
var attr=subParser.onprogress(textData);if(attr){if(attr.ps_Vertex){o=partitionArray(attr.ps_Vertex,tempBufferV,tempBufferOffsetV,1);tempBufferV=o.buffer;tempBufferOffsetV=o.offset;}
if(attr.ps_Color){o=partitionArray(attr.ps_Color,tempBufferC,tempBufferOffsetC,2);tempBufferC=o.buffer;tempBufferOffsetC=o.offset;}
if(attr.ps_Normal){o=partitionArray(attr.ps_Normal,tempBufferN,tempBufferOffsetN,3);tempBufferN=o.buffer;tempBufferOffsetN=o.offset;}}};if(AJAX.overrideMimeType){AJAX.overrideMimeType('text/plain; charset=x-user-defined');}
AJAX.open("GET",path,true);AJAX.send(null);};}
return PSIParser;}());var PLYParser=(function(){function PLYParser(config){var undef;var __empty_func=function(){};var start=config.start||__empty_func;var parse=config.parse||__empty_func;var end=config.end||__empty_func;var VERSION="0.1";var XHR_DONE=4;var pathToFile=null;var fileSizeInBytes=0;var numParsedPoints=0;var numTotalPoints=0;var progress=0;var normalsPresent=false;var colorsPresent=false;var gotHeader=false;var map={};var numValuesPerLine;var onProgressCalled=false;var AJAX=null;this.__defineGetter__("version",function(){return VERSION;});this.__defineGetter__("numParsedPoints",function(){return numParsedPoints;});this.__defineGetter__("numTotalPoints",function(){return numTotalPoints;});this.__defineGetter__("progress",function(){return progress;});this.__defineGetter__("fileSize",function(){return fileSizeInBytes;});this.stop=function(){if(AJAX){AJAX.abort();}};this.load=function(path){pathToFile=path;AJAX=new XMLHttpRequest();AJAX.parser=this;AJAX.onloadstart=function(evt){start(AJAX.parser);};AJAX.onload=function(evt){var data=AJAX.responseText;var chunk=null;if(onProgressCalled===false){chunk=data;}
else if(data.length-AJAX.lastNewLineIndex>1){chunk=data.substring(AJAX.lastNewLineIndex,data.length);}
if(chunk&&chunk.match(/[0-9]/)){AJAX.parseChunk(chunk);}
numTotalPoints=numParsedPoints;progress=1;end(AJAX.parser);};AJAX.parseChunk=function(chunk){if(chunk!==""){if(!gotHeader){var header=""+chunk.match(/(\s|\S)+?end_header/);var properties=header.match(/property.*/g);if(properties){for(var prop=0;prop<properties.length;prop++){var t=properties[prop].replace(/property.*\s+/,'');map[t]=prop;}
if(map["nx"]&&map["ny"]&&map["nz"]){normalsPresent=true;}
if(map["red"]&&map["green"]&&map["blue"]){colorsPresent=true;}
chunk=chunk.replace(/(\s|\S)+?end_header/,'');}
gotHeader=true;}
if(gotHeader){chunk=chunk.replace(/\s*$/,"");chunk=chunk.replace(/^\s+/,"");if(!numValuesPerLine){var sampleLine=""+chunk.match(/^.*/);sampleLine=sampleLine.replace(/\s*$/,'');numValuesPerLine=sampleLine.split(/\s+/).length;}
chunk=chunk.split(/\s+/);var numVerts=chunk.length/numValuesPerLine;numParsedPoints+=numVerts;var verts=new Float32Array(numVerts*3);var cols;var norms;if(colorsPresent){cols=new Float32Array(numVerts*3);}
if(normalsPresent){norms=new Float32Array(numVerts*3);}
for(var i=0,j=0;i<chunk.length;i+=numValuesPerLine,j+=3){verts[j]=parseFloat(chunk[i+map["x"]]);verts[j+1]=parseFloat(chunk[i+map["y"]]);verts[j+2]=parseFloat(chunk[i+map["z"]]);if(norms){norms[j]=parseFloat(chunk[i+map["nx"]]);norms[j+1]=parseFloat(chunk[i+map["ny"]]);norms[j+2]=parseFloat(chunk[i+map["nz"]]);}
if(cols){cols[j]=parseInt(chunk[i+map["red"]],10)/255;cols[j+1]=parseInt(chunk[i+map["green"]],10)/255;cols[j+2]=parseInt(chunk[i+map["blue"]],10)/255;}}
var attributes={};if(verts){attributes["ps_Vertex"]=verts;}
if(cols){attributes["ps_Color"]=cols;}
if(norms){attributes["ps_Normal"]=norms;}
parse(AJAX.parser,attributes);}}};AJAX.onprogress=function(evt){var chunk;if(evt.lengthComputable){fileSizeInBytes=evt.total;progress=evt.loaded/evt.total;}
onProgressCalled=true;if(AJAX.responseText){var data=AJAX.responseText;var lastNewLineIndex=data.lastIndexOf("\n");AJAX.lastNewLineIndex=lastNewLineIndex;if(AJAX.readyState===XHR_DONE){chunk=data.substring(AJAX.startOfNextChunk,data.length);if(chunk.match(/[0-9]/)){AJAX.parseChunk(chunk);}}
else{chunk=data.substring(AJAX.startOfNextChunk,lastNewLineIndex+1);AJAX.startOfNextChunk=lastNewLineIndex+1;AJAX.parseChunk(chunk);}}};if(AJAX.overrideMimeType){AJAX.overrideMimeType("application/json");}
AJAX.open("GET",path,true);AJAX.send(null);};}
return PLYParser;}());var PSI2Parser=(function(){function PSI2Parser(config){var lastChunkSize=0;var parsingVertsCols=true;var gotHeader=false;var numTotalPoints=0;var hasNormals=false;var headerLength=0;var startOfNextChunk;var last8Index;var endOfVertsCols;var diffX,diffY,diffZ;var xMin,yMin,zMin;var xMax,yMax,zMax;this.__defineGetter__("numTotalPoints",function(){return numTotalPoints;});var parseVertsCols=function(chunk,numBytes,byteIdx,verts,cols){var byte1,byte2,twoBytes;var numPoints=numBytes/8;for(var point=0;point<numPoints;byteIdx+=8,point++){verts[point*3+0]=(diffX*getBytes2(chunk,byteIdx)/(32767*1000))+xMin;verts[point*3+1]=(diffY*getBytes2(chunk,byteIdx+2)/(32767*1000))+yMin;verts[point*3+2]=(diffZ*getBytes2(chunk,byteIdx+4)/(32767*1000))+zMin;byte1=getByte(chunk,byteIdx+6);byte2=getByte(chunk,byteIdx+7);twoBytes=(byte2<<8)+byte1;cols[point*3]=(((twoBytes>>10)&0x1F)<<3)/255;cols[point*3+1]=(((twoBytes>>5)&0x1F)<<3)/255;cols[point*3+2]=((twoBytes&0x1F)<<3)/255;}};var parseNorms=function(chunk,norms){var i,j,k,mag;for(var point=0;point<chunk.length;point+=3){i=getByte(chunk,point)/127-1;j=getByte(chunk,point+1)/127-1;k=getByte(chunk,point+2)/127-1;mag=Math.sqrt(i*i+j*j+k*k);norms[point]=i/mag;norms[point+1]=j/mag;norms[point+2]=k/mag;}};var getByte=function(str,iOffset){return str.charCodeAt(iOffset)&0xFF;};var getBytes2=function(str,iOffset){return((getByte(str,iOffset+1)<<8)+getByte(str,iOffset))<<8;};var getBytes3=function(str,iOffset){return(((getByte(str,iOffset+2)<<8)+getByte(str,iOffset+1))<<8)+getByte(str,iOffset);};var readHeader=function(textData){if(textData.indexOf("Specular")===-1){return;}
var noNormalsIdx=textData.indexOf("NoNormals");hasNormals=noNormalsIdx===-1?true:false;var headerStr=textData.substring(0,250);var headerArr=headerStr.split("\r\n");for(var i=0;i<4;i++){headerLength+=(headerArr[i].length+2);}
var min=headerArr[1].split(" ");var max=headerArr[2].split(" ");numTotalPoints=headerArr[3].split(" ")[0]*1;endOfVertsCols=numTotalPoints*8+headerLength;xMin=min[0]*1;yMin=min[1]*1;zMin=min[2]*1;xMax=max[0]*1;yMax=max[1]*1;zMax=max[2]*1;diffX=xMax-xMin;diffY=yMax-yMin;diffZ=zMax-zMin;gotHeader=true;};this.onload=function(textData){if(!gotHeader){var verts,cols;readHeader(textData);var binData=textData.substring(headerLength,endOfVertsCols);var attributes={};verts=new Float32Array(numTotalPoints*3);cols=new Float32Array(numTotalPoints*3);parseVertsCols(binData,binData.length,0,verts,cols);attributes["ps_Vertex"]=verts;attributes["ps_Color"]=cols;if(hasNormals){var rawNormalData=textData.substring(endOfVertsCols,textData.length-5);var norms=new Float32Array(numTotalPoints*3);parseNorms(rawNormalData,rawNormalData.length,0,norms);attributes["ps_Normal"]=norms;}
return attributes;}
return this.onprogress(textData);};this.onprogress=function(textData){if(lastChunkSize===textData.length){return;}
var chunk;var verts,cols,norms;lastChunkSize=textData.length;chunkLength=textData.length;var attributes={};if(!gotHeader){readHeader(textData);if(!gotHeader){return;}
startOfNextChunk=headerLength;}
if(textData.indexOf("End\r\n")>-1){last8Index=chunkLength-5;}
else{var last8;if(parsingVertsCols){last8=Math.floor((chunkLength-headerLength)/8);last8Index=(last8*8)+headerLength;}
else{last8=Math.floor((chunkLength-endOfVertsCols)/8);last8Index=(last8*8)+endOfVertsCols;}}
if(chunkLength<endOfVertsCols){chunk=textData.substring(startOfNextChunk,last8Index);startOfNextChunk=last8Index;verts=new Float32Array(chunk.length/8*3);cols=new Float32Array(chunk.length/8*3);parseVertsCols(chunk,chunk.length,0,verts,cols);attributes["ps_Vertex"]=verts;attributes["ps_Color"]=cols;}
else if(chunkLength>endOfVertsCols&&startOfNextChunk<endOfVertsCols){chunk=textData.substring(startOfNextChunk,endOfVertsCols);if(hasNormals){parsingVertsCols=false;}
startOfNextChunk=endOfVertsCols;var numVerts=chunk.length/8;verts=new Float32Array(numVerts*3);cols=new Float32Array(numVerts*3);parseVertsCols(chunk,chunk.length,0,verts,cols);attributes["ps_Vertex"]=verts;attributes["ps_Color"]=cols;}
if(!parsingVertsCols){chunk=textData.substring(startOfNextChunk,last8Index);startOfNextChunk=last8Index;norms=new Float32Array(chunk.length);parseNorms(chunk,norms);attributes["ps_Normal"]=norms;}
return attributes;};}
return PSI2Parser;}());var HPS0Parser=(function(){function HPS0Parser(config){var lastChunkSize=0;var gotHeader=false;var numTotalPoints=0;var loadedInOneRequest=false;var hasNormals=false;var byteIncrement;var diffX,diffY,diffZ;var xMin,yMin,zMin;var xMax,yMax,zMax;var scaleX,scaleY,scaleZ;const SFACTOR=16777216;const NFACTOR=-0.5+1024;var last12Index;var startOfNextChunk=0;var startOfBin;var endOfVertsCols;var parsingVertsCols=true;var maxTag;this.__defineGetter__("numTotalPoints",function(){return numTotalPoints;});var getByte=function(str,iOffset){return str.charCodeAt(iOffset)&0xFF;};var getBytes2=function(str,iOffset){return((getByte(str,iOffset+1)<<8)+getByte(str,iOffset))<<8;};var getBytes3=function(str,iOffset){return(((getByte(str,iOffset+2)<<8)+getByte(str,iOffset+1))<<8)+getByte(str,iOffset);};var parseVertsCols=function(chunk,byteIdx,verts,cols){var byte1,byte2,twoBytes;var numBytes=chunk.length;for(var point=0;point<numBytes/byteIncrement;byteIdx+=byteIncrement,point++){if(hasNormals){verts[point*3+0]=(diffX*getBytes3(chunk,byteIdx))/scaleX;verts[point*3+1]=(diffY*getBytes3(chunk,byteIdx+3))/scaleY;verts[point*3+2]=(diffZ*getBytes3(chunk,byteIdx+6))/scaleZ;cols[point*3+0]=getByte(chunk,byteIdx+9)/255;cols[point*3+1]=getByte(chunk,byteIdx+10)/255;cols[point*3+2]=getByte(chunk,byteIdx+11)/255;}
else{verts[point*3+0]=(diffX*getBytes2(chunk,byteIdx))/scaleX;verts[point*3+1]=(diffY*getBytes2(chunk,byteIdx+2))/scaleY;verts[point*3+2]=(diffZ*getBytes2(chunk,byteIdx+4))/scaleZ;byte1=getByte(chunk,byteIdx+6);byte2=getByte(chunk,byteIdx+7);twoBytes=(byte2<<8)+byte1;cols[point*3]=(((twoBytes>>10)&0x1F)<<3)/255;cols[point*3+1]=(((twoBytes>>5)&0x1F)<<3)/255;cols[point*3+2]=((twoBytes&0x1F)<<3)/255;}}};var parseNorms=function(chunk,norms){var nzsign,nx11bits,ny11bits,ivalue;var nvec=new Float32Array(3);var byteIdx=0;var numBytes=chunk.length;for(var point=0;byteIdx<numBytes;byteIdx+=3,point+=3){ivalue=getBytes3(chunk,byteIdx);nzsign=(ivalue>>22)&0x0001;nx11bits=(ivalue)&0x07ff;ny11bits=(ivalue>>11)&0x07ff;if(nx11bits>=0&&nx11bits<2048&&ny11bits>=0&&ny11bits<2048){nvec[0]=(nx11bits/NFACTOR)-1.0;nvec[1]=(ny11bits/NFACTOR)-1.0;var nxnymag=nvec[0]*nvec[0]+nvec[1]*nvec[1];nxnymag=Math.min(nxnymag,1);nxnymag=Math.max(nxnymag,-1);nxnymag=1-nxnymag;nxnymag=Math.min(nxnymag,1);nxnymag=Math.max(nxnymag,-1);nvec[2]=Math.sqrt(nxnymag);if(nzsign){nvec[2]=-nvec[2];}
var dNorm=nvec[0]*nvec[0]+nvec[1]*nvec[1]+nvec[2]*nvec[2];dNorm=(dNorm>0)?Math.sqrt(dNorm):1;norms[point]=nvec[0]/dNorm;norms[point+1]=nvec[1]/dNorm;norms[point+2]=nvec[2]/dNorm;}}};var readHeader=function(textData){var maxTagIdx=textData.indexOf("<Max=");if(maxTagIdx===-1){return;}
var maxEndTag=textData.indexOf(">",maxTagIdx);if(maxEndTag===-1){return;}
var numPtsIdx=textData.indexOf("<NumPoints=");var endTagIdx=textData.indexOf(">",numPtsIdx);var numPtsValuesStr=textData.substring((numPtsIdx+"<NumPoints=".length),endTagIdx);var numPtsValuesArr=numPtsValuesStr.split(" ");numTotalPoints=numPtsValuesArr[1]*1;if((numPtsValuesArr[2]*1)!==0){hasNormals=true;}
var minIdx=textData.indexOf("<Min=");var minEndTagIdx=textData.indexOf(">",minIdx);var temp=textData.substring((minIdx+"<Min=".length),minEndTagIdx);var posMinArr=temp.split(" ");xMin=posMinArr[1]*1;yMin=posMinArr[2]*1;zMin=posMinArr[3]*1;var maxIdx=textData.indexOf("<Max=");endTagIdx=textData.indexOf(">",maxIdx);temp=textData.substring((maxIdx+"<Max=".length),endTagIdx);var posMaxArr=temp.split(" ");xMax=posMaxArr[1]*1;yMax=posMaxArr[2]*1;zMax=posMaxArr[3]*1;maxTag=textData.substring(maxIdx,endTagIdx+1);infoStart=startOfBin=endTagIdx+3;diffX=xMax-xMin;diffY=yMax-yMin;diffZ=zMax-zMin;scaleX=SFACTOR+xMin;scaleY=SFACTOR+yMin;scaleZ=SFACTOR+zMin;byteIncrement=hasNormals?12:8;endOfVertsCols=numTotalPoints*byteIncrement+infoStart;gotHeader=true;};this.onload=function(textData){if(!gotHeader){loadedInOneRequest=true;}
return this.onprogress(textData);};this.onprogress=function(textData){if(lastChunkSize===textData.length){return;}
lastChunkSize=textData.length;var chunkLength=textData.length;var attributes={};if(!gotHeader){readHeader(textData);if(!gotHeader){return;}
startOfNextChunk=startOfBin;}
var verts,cols,norms;var numVerts;var chunk;if(textData.indexOf("</Level=")>-1){last12Index=textData.indexOf("</Level=");var tagExists=textData.indexOf(maxTag);infoStart=tagExists+maxTag.length+2;}
else{var last12=Math.floor((chunkLength-infoStart)/byteIncrement);last12Index=(last12*byteIncrement)+infoStart;}
var totalPointsInBytes=(numTotalPoints*byteIncrement)+infoStart;if(chunkLength<endOfVertsCols){chunk=textData.substring(startOfNextChunk,last12Index);startOfNextChunk=last12Index;numVerts=chunk.length/byteIncrement;verts=new Float32Array(numVerts*3);cols=new Float32Array(numVerts*3);parseVertsCols(chunk,0,verts,cols);attributes["ps_Vertex"]=verts;attributes["ps_Color"]=cols;}
else if(startOfNextChunk<endOfVertsCols&&last12Index>endOfVertsCols||loadedInOneRequest||parsingVertsCols){chunk=textData.substring(startOfNextChunk,totalPointsInBytes);if(hasNormals){parsingVertsCols=false;}
startOfNextChunk=totalPointsInBytes;numVerts=chunk.length/byteIncrement;verts=new Float32Array(numVerts*3);cols=new Float32Array(numVerts*3);parseVertsCols(chunk,0,verts,cols);attributes["ps_Vertex"]=verts;attributes["ps_Color"]=cols;}
if(!parsingVertsCols){chunk=textData.substring(startOfNextChunk,last12Index);norms=new Float32Array(chunk.length);startOfNextChunk=last12Index;parseNorms(chunk,norms);attributes["ps_Normal"]=norms;}
return attributes;};}
return HPS0Parser;}());